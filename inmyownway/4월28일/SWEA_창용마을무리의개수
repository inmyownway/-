from collections import deque
test_case=int(input())


def bfs(start):
    q = deque([start])
    visited[start] = True
    while q:
        now = q.popleft()
        for next_node in l[now]:
            if not visited[next_node]:
                q.append(next_node)
                visited[next_node] = True

for test in range(1,test_case+1):
    n,m=map(int,input().split())
    l=[[] for _ in range(n+1)]
    visited=[False]*(n+1)

    for i in range(m):
        x,y=map(int,input().split())
        l[x].append(y)
        l[y].append(x)

    count=0

    for i in range(1,n+1):
        if visited[i]==False:
            bfs(i)
            count+=1
    print("#{} {}".format(test,count))


